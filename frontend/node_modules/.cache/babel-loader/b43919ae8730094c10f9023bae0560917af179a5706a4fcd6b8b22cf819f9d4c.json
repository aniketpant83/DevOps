{"ast":null,"code":"import _toConsumableArray from \"/Users/apple/Desktop/DevOpsApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/apple/Desktop/DevOpsApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/apple/Desktop/DevOpsApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/apple/Desktop/DevOpsApp/frontend/src/App.js\",\n  _this = this,\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from \"react\";\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\nimport \"./App.css\"; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar App = function App() {\n  _s();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var handleTaskClick = function handleTaskClick(taskId) {\n    // Find the task with the clicked taskId\n    var updatedTasks = tasks.map(function (task) {\n      return task.id === taskId ? _objectSpread(_objectSpread({}, task), {}, {\n        status: nextStatus(task.status)\n      }) : task;\n    });\n    setTasks(updatedTasks);\n  };\n  var nextStatus = function nextStatus(currentStatus) {\n    // Define your logic for transitioning task status here\n    switch (currentStatus) {\n      case \"To Do\":\n        return \"In Progress\";\n      case \"In Progress\":\n        return \"Done\";\n      case \"Done\":\n        return \"To Do\";\n      default:\n        return currentStatus;\n    }\n  };\n  var handleAddTask = function handleAddTask(taskName) {\n    var newTask = {\n      id: tasks.length + 1,\n      // Unique ID (you can use a more robust solution)\n      name: taskName,\n      status: \"To Do\" // Initial status\n    };\n\n    setTasks(function (prevTasks) {\n      return [].concat(_toConsumableArray(prevTasks), [newTask]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onTaskClick: handleTaskClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, _this);\n};\n_s(App, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskList","TaskForm","jsxDEV","_jsxDEV","App","_s","_useState","_useState2","_slicedToArray","tasks","setTasks","handleTaskClick","taskId","updatedTasks","map","task","id","_objectSpread","status","nextStatus","currentStatus","handleAddTask","taskName","newTask","length","name","prevTasks","concat","_toConsumableArray","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","onAddTask","onTaskClick","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/DevOpsApp/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from \"react\";\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\nimport \"./App.css\"; // Import the CSS file\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  const handleTaskClick = (taskId) => {\n    // Find the task with the clicked taskId\n    const updatedTasks = tasks.map((task) =>\n      task.id === taskId ? { ...task, status: nextStatus(task.status) } : task\n    );\n\n    setTasks(updatedTasks);\n  };\n\n  const nextStatus = (currentStatus) => {\n    // Define your logic for transitioning task status here\n    switch (currentStatus) {\n      case \"To Do\":\n        return \"In Progress\";\n      case \"In Progress\":\n        return \"Done\";\n      case \"Done\":\n        return \"To Do\";\n      default:\n        return currentStatus;\n    }\n  };\n\n  const handleAddTask = (taskName) => {\n    const newTask = {\n      id: tasks.length + 1, // Unique ID (you can use a more robust solution)\n      name: taskName,\n      status: \"To Do\" // Initial status\n    };\n\n    setTasks((prevTasks) => [...prevTasks, newTask]);\n  };\n\n  return (\n    <div>\n      <h1>Task Management App</h1>\n      <TaskForm onAddTask={handleAddTask} />\n      <TaskList tasks={tasks} onTaskClick={handleTaskClick} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAAAC,EAAA;EAChB,IAAAC,SAAA,GAA0BP,QAAQ,CAAC,EAAE,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,MAAM,EAAK;IAClC;IACA,IAAMC,YAAY,GAAGJ,KAAK,CAACK,GAAG,CAAC,UAACC,IAAI;MAAA,OAClCA,IAAI,CAACC,EAAE,KAAKJ,MAAM,GAAAK,aAAA,CAAAA,aAAA,KAAQF,IAAI;QAAEG,MAAM,EAAEC,UAAU,CAACJ,IAAI,CAACG,MAAM;MAAC,KAAKH,IAAI;IAAA,CAC1E,CAAC;IAEDL,QAAQ,CAACG,YAAY,CAAC;EACxB,CAAC;EAED,IAAMM,UAAU,GAAG,SAAbA,UAAUA,CAAIC,aAAa,EAAK;IACpC;IACA,QAAQA,aAAa;MACnB,KAAK,OAAO;QACV,OAAO,aAAa;MACtB,KAAK,aAAa;QAChB,OAAO,MAAM;MACf,KAAK,MAAM;QACT,OAAO,OAAO;MAChB;QACE,OAAOA,aAAa;IACxB;EACF,CAAC;EAED,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,QAAQ,EAAK;IAClC,IAAMC,OAAO,GAAG;MACdP,EAAE,EAAEP,KAAK,CAACe,MAAM,GAAG,CAAC;MAAE;MACtBC,IAAI,EAAEH,QAAQ;MACdJ,MAAM,EAAE,OAAO,CAAC;IAClB,CAAC;;IAEDR,QAAQ,CAAC,UAACgB,SAAS;MAAA,UAAAC,MAAA,CAAAC,kBAAA,CAASF,SAAS,IAAEH,OAAO;IAAA,CAAC,CAAC;EAClD,CAAC;EAED,oBACEpB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAI,CAAC,eAC5B/B,OAAA,CAACF,QAAQ;MAACkC,SAAS,EAAEd;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,eACtC/B,OAAA,CAACH,QAAQ;MAACS,KAAK,EAAEA,KAAM;MAAC2B,WAAW,EAAEzB;IAAgB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACrD,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA3CID,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA6CT,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}