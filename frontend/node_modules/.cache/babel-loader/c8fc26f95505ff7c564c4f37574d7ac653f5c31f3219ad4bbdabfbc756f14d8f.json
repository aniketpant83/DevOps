{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/DevOps/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/apple/Desktop/DevOps/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Desktop/DevOps/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/apple/Desktop/DevOps/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/apple/Desktop/DevOps/frontend/src/App.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Signin\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar App = function App() {\n  _s();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newTaskName = _useState4[0],\n    setNewTaskName = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    user = _useState6[0],\n    setUser = _useState6[1];\n  useEffect(function () {\n    // Fetch tasks when the component mounts\n    fetchTasks();\n  }, []); // Run once on component mount\n\n  var navigate = useNavigate();\n  var handleRegister = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(email, password) {\n      var response, errorData, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch('http://localhost:5000/users', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            });\n          case 3:\n            response = _context.sent;\n            if (response.ok) {\n              _context.next = 10;\n              break;\n            }\n            _context.next = 7;\n            return response.json();\n          case 7:\n            errorData = _context.sent;\n            console.error('Registration failed:', errorData);\n            return _context.abrupt(\"return\");\n          case 10:\n            _context.next = 12;\n            return response.json();\n          case 12:\n            data = _context.sent;\n            // Assuming the API returns the user data on successful registration:\n            setUser(data);\n            // If you have a token returned from your backend, you might want to store it:\n            // localStorage.setItem('token', data.token);\n\n            navigate('/login');\n            _context.next = 20;\n            break;\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error during registration:', _context.t0);\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 17]]);\n    }));\n    return function handleRegister(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleLogin = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(email, password) {\n      var response, errorData, data;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch('http://localhost:5000/users', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            });\n          case 3:\n            response = _context2.sent;\n            if (response.ok) {\n              _context2.next = 10;\n              break;\n            }\n            _context2.next = 7;\n            return response.json();\n          case 7:\n            errorData = _context2.sent;\n            console.error('Login failed:', errorData);\n            return _context2.abrupt(\"return\");\n          case 10:\n            _context2.next = 12;\n            return response.json();\n          case 12:\n            data = _context2.sent;\n            setUser(data.user);\n            //localStorage.setItem('token', data.token); // Save the token to localStorage\n            navigate('/');\n            _context2.next = 20;\n            break;\n          case 17:\n            _context2.prev = 17;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error('Error during login:', _context2.t0);\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 17]]);\n    }));\n    return function handleLogin(_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var nextStatus = function nextStatus(currentStatus) {\n    // Define your logic for transitioning task status here\n    switch (currentStatus) {\n      case \"To Do\":\n        return \"In Progress\";\n      case \"In Progress\":\n        return \"Done\";\n      case \"Done\":\n        return \"To Do\";\n      default:\n        return currentStatus;\n    }\n  };\n  var handleTaskClick = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(taskId) {\n      var taskToUpdate, updatedTasks, response, data, errorData;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            taskToUpdate = tasks.find(function (task) {\n              return task.id === taskId;\n            });\n            if (!(taskToUpdate.status === 'Done')) {\n              _context3.next = 5;\n              break;\n            }\n            _context3.next = 5;\n            return deleteTask(taskId);\n          case 5:\n            // Find the task with the clicked taskId\n            updatedTasks = tasks.map(function (task) {\n              return task.id === taskId ? _objectSpread(_objectSpread({}, task), {}, {\n                status: nextStatus(task.status)\n              }) : task;\n            });\n            setTasks(updatedTasks);\n            _context3.next = 9;\n            return fetch(\"http://localhost:5000/tasks/\".concat(taskId), {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                status: nextStatus(tasks.find(function (task) {\n                  return task.id === taskId;\n                }).status)\n              })\n            });\n          case 9:\n            response = _context3.sent;\n            if (!response.ok) {\n              _context3.next = 18;\n              break;\n            }\n            _context3.next = 13;\n            return response.json();\n          case 13:\n            data = _context3.sent;\n            console.log('Response from backend:', data);\n            console.log('Task updated successfully');\n            _context3.next = 23;\n            break;\n          case 18:\n            _context3.next = 20;\n            return response.json();\n          case 20:\n            errorData = _context3.sent;\n            console.error('Failed to update task:', response.statusText);\n            console.error('Error Details:', errorData);\n          case 23:\n            _context3.next = 28;\n            break;\n          case 25:\n            _context3.prev = 25;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error('Error updating task:', _context3.t0);\n          case 28:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[0, 25]]);\n    }));\n    return function handleTaskClick(_x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var deleteTask = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(taskId) {\n      var response, updatedTasks, errorData;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return fetch(\"http://localhost:5000/tasks/\".concat(taskId), {\n              method: 'DELETE'\n            });\n          case 3:\n            response = _context4.sent;\n            if (!response.ok) {\n              _context4.next = 9;\n              break;\n            }\n            updatedTasks = tasks.filter(function (task) {\n              return task.id !== taskId;\n            });\n            setTasks(updatedTasks);\n            _context4.next = 14;\n            break;\n          case 9:\n            _context4.next = 11;\n            return response.json();\n          case 11:\n            errorData = _context4.sent;\n            console.error('Failed to delete task:', response.statusText);\n            console.error('Error Details:', errorData);\n          case 14:\n            _context4.next = 19;\n            break;\n          case 16:\n            _context4.prev = 16;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error('Error deleting task:', _context4.t0);\n          case 19:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[0, 16]]);\n    }));\n    return function deleteTask(_x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleAddTask = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(newTaskName) {\n      var payload, response, data, errorData;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            payload = {\n              name: newTaskName\n            };\n            _context5.next = 4;\n            return fetch(\"http://localhost:5000/tasks\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(payload)\n            });\n          case 4:\n            response = _context5.sent;\n            if (!response.ok) {\n              _context5.next = 13;\n              break;\n            }\n            _context5.next = 8;\n            return response.json();\n          case 8:\n            data = _context5.sent;\n            console.log('Response from backend:', data);\n            console.log('Task added successfully');\n            _context5.next = 18;\n            break;\n          case 13:\n            _context5.next = 15;\n            return response.json();\n          case 15:\n            errorData = _context5.sent;\n            console.error('Failed to add task:', response.statusText);\n            console.error('Error Details:', errorData);\n          case 18:\n            _context5.next = 23;\n            break;\n          case 20:\n            _context5.prev = 20;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.error('Error adding task:', _context5.t0);\n          case 23:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[0, 20]]);\n    }));\n    return function handleAddTask(_x7) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var fetchTasks = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n      var response, data;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return fetch(\"http://localhost:5000/tasks\");\n          case 3:\n            response = _context6.sent;\n            if (!response.ok) {\n              _context6.next = 11;\n              break;\n            }\n            _context6.next = 7;\n            return response.json();\n          case 7:\n            data = _context6.sent;\n            setTasks(data);\n            _context6.next = 12;\n            break;\n          case 11:\n            console.error(\"Error fetching tasks:\", response.statusText);\n          case 12:\n            _context6.next = 17;\n            break;\n          case 14:\n            _context6.prev = 14;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.error(\"Error fetching tasks:\", _context6.t0);\n          case 17:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[0, 14]]);\n    }));\n    return function fetchTasks() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Register, {\n        onRegister: handleRegister\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Management App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        onAddTask: handleAddTask,\n        newTaskName: newTaskName,\n        setNewTaskName: setNewTaskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        onTaskClick: handleTaskClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, _this);\n};\n_s(App, \"+pufiX94o8O52NUIRq1Pf1oVapA=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","TaskList","TaskForm","Register","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","newTaskName","setNewTaskName","_useState5","_useState6","user","setUser","fetchTasks","navigate","handleRegister","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","password","response","errorData","data","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","sent","ok","json","console","error","abrupt","t0","stop","_x","_x2","apply","arguments","handleLogin","_ref2","_callee2","_callee2$","_context2","_x3","_x4","nextStatus","currentStatus","handleTaskClick","_ref3","_callee3","taskId","taskToUpdate","updatedTasks","_callee3$","_context3","find","task","id","status","deleteTask","map","_objectSpread","concat","log","statusText","_x5","_ref4","_callee4","_callee4$","_context4","filter","_x6","handleAddTask","_ref5","_callee5","payload","_callee5$","_context5","name","_x7","_ref6","_callee6","_callee6$","_context6","children","onRegister","fileName","_jsxFileName","lineNumber","columnNumber","_this","onLogin","onAddTask","onTaskClick","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/DevOps/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\nimport Register from \"./components/Register\"; \nimport Login from \"./components/Signin\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [newTaskName, setNewTaskName] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // Fetch tasks when the component mounts\n    fetchTasks();\n  }, []); // Run once on component mount\n\n  const navigate = useNavigate();\n  const handleRegister = async (email, password) => {\n    \n    try {\n      const response = await fetch('http://localhost:5000/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n  \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Registration failed:', errorData);\n        return;\n      }\n  \n      const data = await response.json();\n      // Assuming the API returns the user data on successful registration:\n      setUser(data);\n      // If you have a token returned from your backend, you might want to store it:\n      // localStorage.setItem('token', data.token);\n      \n      navigate('/login');\n\n    } catch (error) {\n      console.error('Error during registration:', error);\n    }\n  };\n\n  const handleLogin = async (email, password) => {\n\n    try {\n      const response = await fetch('http://localhost:5000/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n  \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Login failed:', errorData);\n        return;\n      }\n  \n      const data = await response.json();\n      setUser(data.user);\n      //localStorage.setItem('token', data.token); // Save the token to localStorage\n      navigate('/');\n\n    } catch (error) {\n      console.error('Error during login:', error);\n\n    }\n  };\n\n\n  const nextStatus = (currentStatus) => {\n    // Define your logic for transitioning task status here\n    switch (currentStatus) {\n      case \"To Do\":\n        return \"In Progress\";\n      case \"In Progress\":\n        return \"Done\";\n      case \"Done\":\n        return \"To Do\";\n      default:\n        return currentStatus;\n    }\n  };\n\n  const handleTaskClick = async (taskId) => {\n    try {\n      const taskToUpdate = tasks.find(task => task.id === taskId);\n      if (taskToUpdate.status === 'Done') {\n        await deleteTask(taskId);\n      }\n      // Find the task with the clicked taskId\n      const updatedTasks = tasks.map((task) =>\n        task.id === taskId\n          ? { ...task, status: nextStatus(task.status) }\n          : task\n      );\n\n      setTasks(updatedTasks);\n\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ status: nextStatus(tasks.find(task => task.id === taskId).status) }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Response from backend:', data);\n        console.log('Task updated successfully');\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to update task:', response.statusText);\n        console.error('Error Details:', errorData);\n      }\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  const deleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}`, {\n        method: 'DELETE',\n      });\n  \n      if (response.ok) {\n        const updatedTasks = tasks.filter(task => task.id !== taskId);\n        setTasks(updatedTasks);\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to delete task:', response.statusText);\n        console.error('Error Details:', errorData);\n      }\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  \n\n  const handleAddTask = async (newTaskName) => {\n    try {\n      const payload = { name: newTaskName };\n\n      const response = await fetch(\"http://localhost:5000/tasks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Response from backend:', data);\n        console.log('Task added successfully');\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to add task:', response.statusText);\n        console.error('Error Details:', errorData);\n      }\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/tasks\");\n      if (response.ok) {\n        const data = await response.json();\n        setTasks(data);\n      } else {\n        console.error(\"Error fetching tasks:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n\n  \n  return (\n    <div>\n      {!user ? (\n        <>\n          <Register onRegister={handleRegister} />\n          <Login onLogin={handleLogin} />\n        </>\n      ) : (\n        <>\n      <h1>Task Management App</h1>\n      <TaskForm\n        onAddTask={handleAddTask}\n        newTaskName={newTaskName}\n        setNewTaskName={setNewTaskName}\n      />\n      <TaskList tasks={tasks} onTaskClick={handleTaskClick} />\n      </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}