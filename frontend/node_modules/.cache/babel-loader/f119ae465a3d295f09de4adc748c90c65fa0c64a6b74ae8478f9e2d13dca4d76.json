{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/DevOps/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/apple/Desktop/DevOps/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Desktop/DevOps/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/apple/Desktop/DevOps/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/apple/Desktop/DevOps/frontend/src/App.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Signin\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar App = function App() {\n  _s();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newTaskName = _useState4[0],\n    setNewTaskName = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    user = _useState6[0],\n    setUser = _useState6[1];\n  useEffect(function () {\n    // Fetch tasks when the component mounts\n    fetchTasks();\n  }, []); // Run once on component mount\n\n  useEffect(function () {\n    var token = localStorage.getItem('token');\n    if (token) {\n      // Optionally validate token with backend here and fetch user data if needed\n      fetch('http://localhost:5000/validate_token', {\n        headers: {\n          'Authorization': \"Bearer \".concat(token)\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data.valid) {\n          setUser(data.user); // Set the user data here after validating the token\n        }\n      }).catch(function (error) {\n        console.error('Error validating token:', error);\n      });\n    }\n  }, []);\n  var navigate = useNavigate();\n  var handleRegister = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(username, email, password) {\n      var response, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch('http://localhost:5000/register', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: username,\n                email: email,\n                password: password\n              })\n            });\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n          case 6:\n            data = _context.sent;\n            // Assuming the API returns the user data on successful registration:\n            setUser(data.user_);\n            // If you have a token returned from your backend, you might want to store it:\n            // localStorage.setItem('token', data.token);\n\n            if (response.ok) {\n              console.log('Response from backend:', data);\n              console.log('Registration successfully');\n            } else {\n              console.error('Registration failed');\n              console.error('Error Details:', data);\n            }\n            navigate('/');\n            _context.next = 15;\n            break;\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error during registration:', _context.t0);\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n    return function handleRegister(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleLogin = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(username, email, password) {\n      var response, data;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch('http://localhost:5000/login', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: username,\n                email: email,\n                password: password\n              })\n            });\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return response.json();\n          case 6:\n            data = _context2.sent;\n            setUser(data);\n            if (response.ok) {\n              localStorage.setItem('token', data.token);\n              console.log('Login successfully', data);\n            } else {\n              console.error('Login failed');\n              console.error('Error Details:', data);\n\n              //localStorage.setItem('token', data.token); // Save the token to localStorage\n              navigate('/');\n            }\n            _context2.next = 14;\n            break;\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error('Error during login:', _context2.t0);\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 11]]);\n    }));\n    return function handleLogin(_x4, _x5, _x6) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function handleLogout() {\n    localStorage.removeItem('token'); // Remove the token from localStorage\n    setUser(null); // Update the state to reflect that the user is logged out\n  };\n\n  // =============================== User Login & Register ========================================================\n\n  var nextStatus = function nextStatus(currentStatus) {\n    // Define your logic for transitioning task status here\n    switch (currentStatus) {\n      case \"To Do\":\n        return \"In Progress\";\n      case \"In Progress\":\n        return \"Done\";\n      case \"Done\":\n        return \"To Do\";\n      default:\n        return currentStatus;\n    }\n  };\n  var handleTaskClick = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(taskId) {\n      var taskToUpdate, updatedTasks, response, data, errorData;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            taskToUpdate = tasks.find(function (task) {\n              return task.id === taskId;\n            });\n            if (!(taskToUpdate.status === 'Done')) {\n              _context3.next = 5;\n              break;\n            }\n            _context3.next = 5;\n            return deleteTask(taskId);\n          case 5:\n            // Find the task with the clicked taskId\n            updatedTasks = tasks.map(function (task) {\n              return task.id === taskId ? _objectSpread(_objectSpread({}, task), {}, {\n                status: nextStatus(task.status)\n              }) : task;\n            });\n            setTasks(updatedTasks);\n            _context3.next = 9;\n            return fetch(\"http://localhost:5000/tasks/\".concat(taskId), {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                status: nextStatus(tasks.find(function (task) {\n                  return task.id === taskId;\n                }).status)\n              })\n            });\n          case 9:\n            response = _context3.sent;\n            if (!response.ok) {\n              _context3.next = 18;\n              break;\n            }\n            _context3.next = 13;\n            return response.json();\n          case 13:\n            data = _context3.sent;\n            console.log('Response from backend:', data);\n            console.log('Task updated successfully');\n            _context3.next = 23;\n            break;\n          case 18:\n            _context3.next = 20;\n            return response.json();\n          case 20:\n            errorData = _context3.sent;\n            console.error('Failed to update task:', response.statusText);\n            console.error('Error Details:', errorData);\n          case 23:\n            _context3.next = 28;\n            break;\n          case 25:\n            _context3.prev = 25;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error('Error updating task:', _context3.t0);\n          case 28:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[0, 25]]);\n    }));\n    return function handleTaskClick(_x7) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var deleteTask = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(taskId) {\n      var response, updatedTasks, errorData;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return fetch(\"http://localhost:5000/tasks/\".concat(taskId), {\n              method: 'DELETE'\n            });\n          case 3:\n            response = _context4.sent;\n            if (!response.ok) {\n              _context4.next = 9;\n              break;\n            }\n            updatedTasks = tasks.filter(function (task) {\n              return task.id !== taskId;\n            });\n            setTasks(updatedTasks);\n            _context4.next = 14;\n            break;\n          case 9:\n            _context4.next = 11;\n            return response.json();\n          case 11:\n            errorData = _context4.sent;\n            console.error('Failed to delete task:', response.statusText);\n            console.error('Error Details:', errorData);\n          case 14:\n            _context4.next = 19;\n            break;\n          case 16:\n            _context4.prev = 16;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error('Error deleting task:', _context4.t0);\n          case 19:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[0, 16]]);\n    }));\n    return function deleteTask(_x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleAddTask = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(newTaskName) {\n      var payload, response, data, errorData;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            payload = {\n              name: newTaskName\n            };\n            _context5.next = 4;\n            return fetch(\"http://localhost:5000/tasks\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(payload)\n            });\n          case 4:\n            response = _context5.sent;\n            if (!response.ok) {\n              _context5.next = 13;\n              break;\n            }\n            _context5.next = 8;\n            return response.json();\n          case 8:\n            data = _context5.sent;\n            console.log('Response from backend:', data);\n            console.log('Task added successfully');\n            _context5.next = 18;\n            break;\n          case 13:\n            _context5.next = 15;\n            return response.json();\n          case 15:\n            errorData = _context5.sent;\n            console.error('Failed to add task:', response.statusText);\n            console.error('Error Details:', errorData);\n          case 18:\n            _context5.next = 23;\n            break;\n          case 20:\n            _context5.prev = 20;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.error('Error adding task:', _context5.t0);\n          case 23:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[0, 20]]);\n    }));\n    return function handleAddTask(_x9) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var fetchTasks = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n      var response, data;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return fetch(\"http://localhost:5000/tasks\");\n          case 3:\n            response = _context6.sent;\n            if (!response.ok) {\n              _context6.next = 11;\n              break;\n            }\n            _context6.next = 7;\n            return response.json();\n          case 7:\n            data = _context6.sent;\n            setTasks(data);\n            _context6.next = 12;\n            break;\n          case 11:\n            console.error(\"Error fetching tasks:\", response.statusText);\n          case 12:\n            _context6.next = 17;\n            break;\n          case 14:\n            _context6.prev = 14;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.error(\"Error fetching tasks:\", _context6.t0);\n          case 17:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[0, 14]]);\n    }));\n    return function fetchTasks() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Register, {\n        onRegister: handleRegister\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Management App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        onAddTask: handleAddTask,\n        newTaskName: newTaskName,\n        setNewTaskName: setNewTaskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        onTaskClick: handleTaskClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, _this);\n};\n_s(App, \"4fQukCzgJya598SwaPkyHi8WTvU=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","TaskList","TaskForm","Register","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","newTaskName","setNewTaskName","_useState5","_useState6","user","setUser","fetchTasks","token","localStorage","getItem","fetch","headers","concat","then","response","json","data","valid","catch","error","console","navigate","handleRegister","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","username","email","password","wrap","_callee$","_context","prev","next","method","body","JSON","stringify","sent","user_","ok","log","t0","stop","_x","_x2","_x3","apply","arguments","handleLogin","_ref2","_callee2","_callee2$","_context2","setItem","_x4","_x5","_x6","handleLogout","removeItem","nextStatus","currentStatus","handleTaskClick","_ref3","_callee3","taskId","taskToUpdate","updatedTasks","errorData","_callee3$","_context3","find","task","id","status","deleteTask","map","_objectSpread","statusText","_x7","_ref4","_callee4","_callee4$","_context4","filter","_x8","handleAddTask","_ref5","_callee5","payload","_callee5$","_context5","name","_x9","_ref6","_callee6","_callee6$","_context6","children","onRegister","fileName","_jsxFileName","lineNumber","columnNumber","_this","onLogin","onAddTask","onTaskClick","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/DevOps/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\nimport Register from \"./components/Register\"; \nimport Login from \"./components/Signin\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [newTaskName, setNewTaskName] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // Fetch tasks when the component mounts\n    fetchTasks();\n  }, []); // Run once on component mount\n  \n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Optionally validate token with backend here and fetch user data if needed\n      fetch('http://localhost:5000/validate_token', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json())\n        .then(data => {\n          if (data.valid) {\n            setUser(data.user); // Set the user data here after validating the token\n          }\n        }).catch(error => {\n          console.error('Error validating token:', error);\n        });\n    }\n  }, []);\n  \n\n  const navigate = useNavigate();\n  const handleRegister = async (username, email, password) => {\n    \n    try {\n      const response = await fetch('http://localhost:5000/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, email, password }),\n      });\n  \n      const data = await response.json();\n      // Assuming the API returns the user data on successful registration:\n      setUser(data.user_);\n      // If you have a token returned from your backend, you might want to store it:\n      // localStorage.setItem('token', data.token);\n\n      if (response.ok) {\n        console.log('Response from backend:', data);\n        console.log('Registration successfully');\n      } else {\n        console.error('Registration failed');\n        console.error('Error Details:', data);\n      }\n      \n      navigate('/');\n\n    } catch (error) {\n      console.error('Error during registration:', error);\n    }\n  };\n\n  const handleLogin = async (username, email, password) => {\n\n    try {\n      const response = await fetch('http://localhost:5000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, email, password }),\n      });\n      \n      const data = await response.json();\n      setUser(data);\n\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        console.log('Login successfully', data);\n      } else {\n        console.error('Login failed');\n        console.error('Error Details:', data);\n  \n      \n      //localStorage.setItem('token', data.token); // Save the token to localStorage\n      navigate('/');\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token'); // Remove the token from localStorage\n    setUser(null); // Update the state to reflect that the user is logged out\n  };\n\n  // =============================== User Login & Register ========================================================\n\n\n  const nextStatus = (currentStatus) => {\n    // Define your logic for transitioning task status here\n    switch (currentStatus) {\n      case \"To Do\":\n        return \"In Progress\";\n      case \"In Progress\":\n        return \"Done\";\n      case \"Done\":\n        return \"To Do\";\n      default:\n        return currentStatus;\n    }\n  };\n\n  const handleTaskClick = async (taskId) => {\n    try {\n      const taskToUpdate = tasks.find(task => task.id === taskId);\n      if (taskToUpdate.status === 'Done') {\n        await deleteTask(taskId);\n      }\n      // Find the task with the clicked taskId\n      const updatedTasks = tasks.map((task) =>\n        task.id === taskId\n          ? { ...task, status: nextStatus(task.status) }\n          : task\n      );\n\n      setTasks(updatedTasks);\n\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ status: nextStatus(tasks.find(task => task.id === taskId).status) }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Response from backend:', data);\n        console.log('Task updated successfully');\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to update task:', response.statusText);\n        console.error('Error Details:', errorData);\n      }\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  const deleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}`, {\n        method: 'DELETE',\n      });\n  \n      if (response.ok) {\n        const updatedTasks = tasks.filter(task => task.id !== taskId);\n        setTasks(updatedTasks);\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to delete task:', response.statusText);\n        console.error('Error Details:', errorData);\n      }\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  \n\n  const handleAddTask = async (newTaskName) => {\n    try {\n      const payload = { name: newTaskName };\n\n      const response = await fetch(\"http://localhost:5000/tasks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Response from backend:', data);\n        console.log('Task added successfully');\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to add task:', response.statusText);\n        console.error('Error Details:', errorData);\n      }\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/tasks\");\n      if (response.ok) {\n        const data = await response.json();\n        setTasks(data);\n      } else {\n        console.error(\"Error fetching tasks:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n\n  \n  return (\n    <div>\n      {!user ? (\n        <>\n          <Register onRegister={handleRegister} />\n          <Login onLogin={handleLogin} />\n        </>\n      ) : (\n        <>\n      <h1>Task Management App</h1>\n      <TaskForm\n        onAddTask={handleAddTask}\n        newTaskName={newTaskName}\n        setNewTaskName={setNewTaskName}\n      />\n      <TaskList tasks={tasks} onTaskClick={handleTaskClick} />\n      </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnB,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAAAC,EAAA;EAChB,IAAAC,SAAA,GAA0Bb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAsClB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAAwBtB,QAAQ,CAAC,IAAI,CAAC;IAAAuB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAEpBtB,SAAS,CAAC,YAAM;IACd;IACAyB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERzB,SAAS,CAAC,YAAM;IACd,IAAM0B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT;MACAG,KAAK,CAAC,sCAAsC,EAAE;QAC5CC,OAAO,EAAE;UACP,eAAe,YAAAC,MAAA,CAAYL,KAAK;QAClC;MACF,CAAC,CAAC,CAACM,IAAI,CAAC,UAAAC,QAAQ;QAAA,OAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC;MAAA,EAAC,CACjCF,IAAI,CAAC,UAAAG,IAAI,EAAI;QACZ,IAAIA,IAAI,CAACC,KAAK,EAAE;UACdZ,OAAO,CAACW,IAAI,CAACZ,IAAI,CAAC,CAAC,CAAC;QACtB;MACF,CAAC,CAAC,CAACc,KAAK,CAAC,UAAAC,KAAK,EAAI;QAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN;EACF,CAAC,EAAE,EAAE,CAAC;EAGN,IAAME,QAAQ,GAAGvC,WAAW,CAAC,CAAC;EAC9B,IAAMwC,cAAc;IAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ;MAAA,IAAAhB,QAAA,EAAAE,IAAA;MAAA,OAAAS,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAE,IAAA;YAAA,OAG5BzB,KAAK,CAAC,gCAAgC,EAAE;cAC7D0B,MAAM,EAAE,MAAM;cACdzB,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACD0B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;gBAAEX,QAAQ,EAARA,QAAQ;gBAAEC,KAAK,EAALA,KAAK;gBAAEC,QAAQ,EAARA;cAAS,CAAC;YACpD,CAAC,CAAC;UAAA;YANIhB,QAAQ,GAAAmB,QAAA,CAAAO,IAAA;YAAAP,QAAA,CAAAE,IAAA;YAAA,OAQKrB,QAAQ,CAACC,IAAI,CAAC,CAAC;UAAA;YAA5BC,IAAI,GAAAiB,QAAA,CAAAO,IAAA;YACV;YACAnC,OAAO,CAACW,IAAI,CAACyB,KAAK,CAAC;YACnB;YACA;;YAEA,IAAI3B,QAAQ,CAAC4B,EAAE,EAAE;cACftB,OAAO,CAACuB,GAAG,CAAC,wBAAwB,EAAE3B,IAAI,CAAC;cAC3CI,OAAO,CAACuB,GAAG,CAAC,2BAA2B,CAAC;YAC1C,CAAC,MAAM;cACLvB,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAC;cACpCC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEH,IAAI,CAAC;YACvC;YAEAK,QAAQ,CAAC,GAAG,CAAC;YAACY,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAW,EAAA,GAAAX,QAAA;YAGdb,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAAc,QAAA,CAAAW,EAAO,CAAC;UAAC;UAAA;YAAA,OAAAX,QAAA,CAAAY,IAAA;QAAA;MAAA,GAAAlB,OAAA;IAAA,CAEtD;IAAA,gBA9BKL,cAAcA,CAAAwB,EAAA,EAAAC,GAAA,EAAAC,GAAA;MAAA,OAAAzB,IAAA,CAAA0B,KAAA,OAAAC,SAAA;IAAA;EAAA,GA8BnB;EAED,IAAMC,WAAW;IAAA,IAAAC,KAAA,GAAA5B,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA2B,SAAOzB,QAAQ,EAAEC,KAAK,EAAEC,QAAQ;MAAA,IAAAhB,QAAA,EAAAE,IAAA;MAAA,OAAAS,mBAAA,GAAAM,IAAA,UAAAuB,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAArB,IAAA,GAAAqB,SAAA,CAAApB,IAAA;UAAA;YAAAoB,SAAA,CAAArB,IAAA;YAAAqB,SAAA,CAAApB,IAAA;YAAA,OAGzBzB,KAAK,CAAC,6BAA6B,EAAE;cAC1D0B,MAAM,EAAE,MAAM;cACdzB,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACD0B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;gBAAEX,QAAQ,EAARA,QAAQ;gBAAEC,KAAK,EAALA,KAAK;gBAAEC,QAAQ,EAARA;cAAS,CAAC;YACpD,CAAC,CAAC;UAAA;YANIhB,QAAQ,GAAAyC,SAAA,CAAAf,IAAA;YAAAe,SAAA,CAAApB,IAAA;YAAA,OAQKrB,QAAQ,CAACC,IAAI,CAAC,CAAC;UAAA;YAA5BC,IAAI,GAAAuC,SAAA,CAAAf,IAAA;YACVnC,OAAO,CAACW,IAAI,CAAC;YAEb,IAAIF,QAAQ,CAAC4B,EAAE,EAAE;cACflC,YAAY,CAACgD,OAAO,CAAC,OAAO,EAAExC,IAAI,CAACT,KAAK,CAAC;cACzCa,OAAO,CAACuB,GAAG,CAAC,oBAAoB,EAAE3B,IAAI,CAAC;YACzC,CAAC,MAAM;cACLI,OAAO,CAACD,KAAK,CAAC,cAAc,CAAC;cAC7BC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEH,IAAI,CAAC;;cAGvC;cACAK,QAAQ,CAAC,GAAG,CAAC;YACb;YAACkC,SAAA,CAAApB,IAAA;YAAA;UAAA;YAAAoB,SAAA,CAAArB,IAAA;YAAAqB,SAAA,CAAAX,EAAA,GAAAW,SAAA;YAEDnC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAAoC,SAAA,CAAAX,EAAO,CAAC;UAAC;UAAA;YAAA,OAAAW,SAAA,CAAAV,IAAA;QAAA;MAAA,GAAAQ,QAAA;IAAA,CAG/C;IAAA,gBA7BKF,WAAWA,CAAAM,GAAA,EAAAC,GAAA,EAAAC,GAAA;MAAA,OAAAP,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GA6BhB;EAED,IAAMU,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBpD,YAAY,CAACqD,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClCxD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;EACjB,CAAC;;EAED;;EAGA,IAAMyD,UAAU,GAAG,SAAbA,UAAUA,CAAIC,aAAa,EAAK;IACpC;IACA,QAAQA,aAAa;MACnB,KAAK,OAAO;QACV,OAAO,aAAa;MACtB,KAAK,aAAa;QAChB,OAAO,MAAM;MACf,KAAK,MAAM;QACT,OAAO,OAAO;MAChB;QACE,OAAOA,aAAa;IACxB;EACF,CAAC;EAED,IAAMC,eAAe;IAAA,IAAAC,KAAA,GAAAzC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAwC,SAAOC,MAAM;MAAA,IAAAC,YAAA,EAAAC,YAAA,EAAAvD,QAAA,EAAAE,IAAA,EAAAsD,SAAA;MAAA,OAAA7C,mBAAA,GAAAM,IAAA,UAAAwC,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAtC,IAAA,GAAAsC,SAAA,CAAArC,IAAA;UAAA;YAAAqC,SAAA,CAAAtC,IAAA;YAE3BkC,YAAY,GAAGxE,KAAK,CAAC6E,IAAI,CAAC,UAAAC,IAAI;cAAA,OAAIA,IAAI,CAACC,EAAE,KAAKR,MAAM;YAAA,EAAC;YAAA,MACvDC,YAAY,CAACQ,MAAM,KAAK,MAAM;cAAAJ,SAAA,CAAArC,IAAA;cAAA;YAAA;YAAAqC,SAAA,CAAArC,IAAA;YAAA,OAC1B0C,UAAU,CAACV,MAAM,CAAC;UAAA;YAE1B;YACME,YAAY,GAAGzE,KAAK,CAACkF,GAAG,CAAC,UAACJ,IAAI;cAAA,OAClCA,IAAI,CAACC,EAAE,KAAKR,MAAM,GAAAY,aAAA,CAAAA,aAAA,KACTL,IAAI;gBAAEE,MAAM,EAAEd,UAAU,CAACY,IAAI,CAACE,MAAM;cAAC,KAC1CF,IAAI;YAAA,CACV,CAAC;YAED7E,QAAQ,CAACwE,YAAY,CAAC;YAACG,SAAA,CAAArC,IAAA;YAAA,OAEAzB,KAAK,gCAAAE,MAAA,CAAgCuD,MAAM,GAAI;cACpE/B,MAAM,EAAE,KAAK;cACbzB,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACD0B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;gBAAEqC,MAAM,EAAEd,UAAU,CAAClE,KAAK,CAAC6E,IAAI,CAAC,UAAAC,IAAI;kBAAA,OAAIA,IAAI,CAACC,EAAE,KAAKR,MAAM;gBAAA,EAAC,CAACS,MAAM;cAAE,CAAC;YAC5F,CAAC,CAAC;UAAA;YANI9D,QAAQ,GAAA0D,SAAA,CAAAhC,IAAA;YAAA,KAQV1B,QAAQ,CAAC4B,EAAE;cAAA8B,SAAA,CAAArC,IAAA;cAAA;YAAA;YAAAqC,SAAA,CAAArC,IAAA;YAAA,OACMrB,QAAQ,CAACC,IAAI,CAAC,CAAC;UAAA;YAA5BC,IAAI,GAAAwD,SAAA,CAAAhC,IAAA;YACVpB,OAAO,CAACuB,GAAG,CAAC,wBAAwB,EAAE3B,IAAI,CAAC;YAC3CI,OAAO,CAACuB,GAAG,CAAC,2BAA2B,CAAC;YAAC6B,SAAA,CAAArC,IAAA;YAAA;UAAA;YAAAqC,SAAA,CAAArC,IAAA;YAAA,OAEjBrB,QAAQ,CAACC,IAAI,CAAC,CAAC;UAAA;YAAjCuD,SAAS,GAAAE,SAAA,CAAAhC,IAAA;YACfpB,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEL,QAAQ,CAACkE,UAAU,CAAC;YAC5D5D,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEmD,SAAS,CAAC;UAAC;YAAAE,SAAA,CAAArC,IAAA;YAAA;UAAA;YAAAqC,SAAA,CAAAtC,IAAA;YAAAsC,SAAA,CAAA5B,EAAA,GAAA4B,SAAA;YAG7CpD,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAAqD,SAAA,CAAA5B,EAAO,CAAC;UAAC;UAAA;YAAA,OAAA4B,SAAA,CAAA3B,IAAA;QAAA;MAAA,GAAAqB,QAAA;IAAA,CAEhD;IAAA,gBAnCKF,eAAeA,CAAAiB,GAAA;MAAA,OAAAhB,KAAA,CAAAhB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAmCpB;EAED,IAAM2B,UAAU;IAAA,IAAAK,KAAA,GAAA1D,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAyD,SAAOhB,MAAM;MAAA,IAAArD,QAAA,EAAAuD,YAAA,EAAAC,SAAA;MAAA,OAAA7C,mBAAA,GAAAM,IAAA,UAAAqD,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAnD,IAAA,GAAAmD,SAAA,CAAAlD,IAAA;UAAA;YAAAkD,SAAA,CAAAnD,IAAA;YAAAmD,SAAA,CAAAlD,IAAA;YAAA,OAELzB,KAAK,gCAAAE,MAAA,CAAgCuD,MAAM,GAAI;cACpE/B,MAAM,EAAE;YACV,CAAC,CAAC;UAAA;YAFItB,QAAQ,GAAAuE,SAAA,CAAA7C,IAAA;YAAA,KAIV1B,QAAQ,CAAC4B,EAAE;cAAA2C,SAAA,CAAAlD,IAAA;cAAA;YAAA;YACPkC,YAAY,GAAGzE,KAAK,CAAC0F,MAAM,CAAC,UAAAZ,IAAI;cAAA,OAAIA,IAAI,CAACC,EAAE,KAAKR,MAAM;YAAA,EAAC;YAC7DtE,QAAQ,CAACwE,YAAY,CAAC;YAACgB,SAAA,CAAAlD,IAAA;YAAA;UAAA;YAAAkD,SAAA,CAAAlD,IAAA;YAAA,OAECrB,QAAQ,CAACC,IAAI,CAAC,CAAC;UAAA;YAAjCuD,SAAS,GAAAe,SAAA,CAAA7C,IAAA;YACfpB,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEL,QAAQ,CAACkE,UAAU,CAAC;YAC5D5D,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEmD,SAAS,CAAC;UAAC;YAAAe,SAAA,CAAAlD,IAAA;YAAA;UAAA;YAAAkD,SAAA,CAAAnD,IAAA;YAAAmD,SAAA,CAAAzC,EAAA,GAAAyC,SAAA;YAG7CjE,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAAkE,SAAA,CAAAzC,EAAO,CAAC;UAAC;UAAA;YAAA,OAAAyC,SAAA,CAAAxC,IAAA;QAAA;MAAA,GAAAsC,QAAA;IAAA,CAEhD;IAAA,gBAjBKN,UAAUA,CAAAU,GAAA;MAAA,OAAAL,KAAA,CAAAjC,KAAA,OAAAC,SAAA;IAAA;EAAA,GAiBf;EAGD,IAAMsC,aAAa;IAAA,IAAAC,KAAA,GAAAjE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAgE,SAAO1F,WAAW;MAAA,IAAA2F,OAAA,EAAA7E,QAAA,EAAAE,IAAA,EAAAsD,SAAA;MAAA,OAAA7C,mBAAA,GAAAM,IAAA,UAAA6D,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA3D,IAAA,GAAA2D,SAAA,CAAA1D,IAAA;UAAA;YAAA0D,SAAA,CAAA3D,IAAA;YAE9ByD,OAAO,GAAG;cAAEG,IAAI,EAAE9F;YAAY,CAAC;YAAA6F,SAAA,CAAA1D,IAAA;YAAA,OAEdzB,KAAK,CAAC,6BAA6B,EAAE;cAC1D0B,MAAM,EAAE,MAAM;cACdzB,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACD0B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACoD,OAAO;YAC9B,CAAC,CAAC;UAAA;YANI7E,QAAQ,GAAA+E,SAAA,CAAArD,IAAA;YAAA,KAQV1B,QAAQ,CAAC4B,EAAE;cAAAmD,SAAA,CAAA1D,IAAA;cAAA;YAAA;YAAA0D,SAAA,CAAA1D,IAAA;YAAA,OACMrB,QAAQ,CAACC,IAAI,CAAC,CAAC;UAAA;YAA5BC,IAAI,GAAA6E,SAAA,CAAArD,IAAA;YACVpB,OAAO,CAACuB,GAAG,CAAC,wBAAwB,EAAE3B,IAAI,CAAC;YAC3CI,OAAO,CAACuB,GAAG,CAAC,yBAAyB,CAAC;YAACkD,SAAA,CAAA1D,IAAA;YAAA;UAAA;YAAA0D,SAAA,CAAA1D,IAAA;YAAA,OAEfrB,QAAQ,CAACC,IAAI,CAAC,CAAC;UAAA;YAAjCuD,SAAS,GAAAuB,SAAA,CAAArD,IAAA;YACfpB,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEL,QAAQ,CAACkE,UAAU,CAAC;YACzD5D,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEmD,SAAS,CAAC;UAAC;YAAAuB,SAAA,CAAA1D,IAAA;YAAA;UAAA;YAAA0D,SAAA,CAAA3D,IAAA;YAAA2D,SAAA,CAAAjD,EAAA,GAAAiD,SAAA;YAG7CzE,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAA0E,SAAA,CAAAjD,EAAO,CAAC;UAAC;UAAA;YAAA,OAAAiD,SAAA,CAAAhD,IAAA;QAAA;MAAA,GAAA6C,QAAA;IAAA,CAE9C;IAAA,gBAxBKF,aAAaA,CAAAO,GAAA;MAAA,OAAAN,KAAA,CAAAxC,KAAA,OAAAC,SAAA;IAAA;EAAA,GAwBlB;EAED,IAAM5C,UAAU;IAAA,IAAA0F,KAAA,GAAAxE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAuE,SAAA;MAAA,IAAAnF,QAAA,EAAAE,IAAA;MAAA,OAAAS,mBAAA,GAAAM,IAAA,UAAAmE,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAjE,IAAA,GAAAiE,SAAA,CAAAhE,IAAA;UAAA;YAAAgE,SAAA,CAAAjE,IAAA;YAAAiE,SAAA,CAAAhE,IAAA;YAAA,OAEQzB,KAAK,CAAC,6BAA6B,CAAC;UAAA;YAArDI,QAAQ,GAAAqF,SAAA,CAAA3D,IAAA;YAAA,KACV1B,QAAQ,CAAC4B,EAAE;cAAAyD,SAAA,CAAAhE,IAAA;cAAA;YAAA;YAAAgE,SAAA,CAAAhE,IAAA;YAAA,OACMrB,QAAQ,CAACC,IAAI,CAAC,CAAC;UAAA;YAA5BC,IAAI,GAAAmF,SAAA,CAAA3D,IAAA;YACV3C,QAAQ,CAACmB,IAAI,CAAC;YAACmF,SAAA,CAAAhE,IAAA;YAAA;UAAA;YAEff,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEL,QAAQ,CAACkE,UAAU,CAAC;UAAC;YAAAmB,SAAA,CAAAhE,IAAA;YAAA;UAAA;YAAAgE,SAAA,CAAAjE,IAAA;YAAAiE,SAAA,CAAAvD,EAAA,GAAAuD,SAAA;YAG9D/E,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAAgF,SAAA,CAAAvD,EAAO,CAAC;UAAC;UAAA;YAAA,OAAAuD,SAAA,CAAAtD,IAAA;QAAA;MAAA,GAAAoD,QAAA;IAAA,CAEjD;IAAA,gBAZK3F,UAAUA,CAAA;MAAA,OAAA0F,KAAA,CAAA/C,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYf;EAGD,oBACE9D,OAAA;IAAAgH,QAAA,EACG,CAAChG,IAAI,gBACJhB,OAAA,CAAAE,SAAA;MAAA8G,QAAA,gBACEhH,OAAA,CAACH,QAAQ;QAACoH,UAAU,EAAE/E;MAAe;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAE,CAAC,eACxCtH,OAAA,CAACF,KAAK;QAACyH,OAAO,EAAExD;MAAY;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAE,CAAC;IAAA,eAC/B,CAAC,gBAEHtH,OAAA,CAAAE,SAAA;MAAA8G,QAAA,gBACFhH,OAAA;QAAAgH,QAAA,EAAI;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAI,CAAC,eAC5BtH,OAAA,CAACJ,QAAQ;QACP4H,SAAS,EAAEpB,aAAc;QACzBxF,WAAW,EAAEA,WAAY;QACzBC,cAAc,EAAEA;MAAe;QAAAqG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAChC,CAAC,eACFtH,OAAA,CAACL,QAAQ;QAACa,KAAK,EAAEA,KAAM;QAACiH,WAAW,EAAE7C;MAAgB;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAE,CAAC;IAAA,eACtD;EACD;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACE,CAAC;AAEV,CAAC;AAAClH,EAAA,CA1OID,GAAG;EAAA,QA8BUT,WAAW;AAAA;AAAAgI,EAAA,GA9BxBvH,GAAG;AA4OT,eAAeA,GAAG;AAAC,IAAAuH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}