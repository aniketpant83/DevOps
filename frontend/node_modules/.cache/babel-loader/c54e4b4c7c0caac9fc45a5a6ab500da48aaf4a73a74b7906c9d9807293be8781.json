{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Desktop/DevOpsApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Desktop/DevOpsApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/apple/Desktop/DevOpsApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/apple/Desktop/DevOpsApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/apple/Desktop/DevOpsApp/frontend/src/App.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar App = function App() {\n  _s();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newTaskName = _useState4[0],\n    setNewTaskName = _useState4[1];\n  useEffect(function () {\n    // Fetch tasks when the component mounts\n    fetchTasks();\n  }, []); // Run once on component mount\n\n  var handleTaskClick = function handleTaskClick(taskId) {\n    // Find the task with the clicked taskId\n    var updatedTasks = tasks.map(function (task) {\n      return task.id === taskId ? _objectSpread(_objectSpread({}, task), {}, {\n        status: nextStatus(task.status)\n      }) : task;\n    });\n    setTasks(updatedTasks);\n  };\n  var nextStatus = function nextStatus(currentStatus) {\n    // Define your logic for transitioning task status here\n    switch (currentStatus) {\n      case \"To Do\":\n        return \"In Progress\";\n      case \"In Progress\":\n        return \"Done\";\n      case \"Done\":\n        return \"To Do\";\n      default:\n        return currentStatus;\n    }\n  };\n  var handleAddTask = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(\"http://localhost:5000/tasks\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                name: newTaskName\n              })\n            });\n          case 3:\n            response = _context.sent;\n            if (response.ok) {\n              // Task created successfully, update state or perform other \n              actions;\n              setNewTaskName(\"\"); // Clear input field\n              fetchTasks(); // Refetch tasks to update the list\n            } else {\n              console.error(\"Error creating task:\", response.statusText);\n            }\n            _context.next = 10;\n            break;\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(\"Error creating task:\", _context.t0);\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n    return function handleAddTask() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var fetchTasks = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var response, data;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(\"http://localhost:5000/tasks\");\n          case 3:\n            response = _context2.sent;\n            if (!response.ok) {\n              _context2.next = 11;\n              break;\n            }\n            _context2.next = 7;\n            return response.json();\n          case 7:\n            data = _context2.sent;\n            setTasks(data);\n            _context2.next = 12;\n            break;\n          case 11:\n            console.error(\"Error fetching tasks:\", response.statusText);\n          case 12:\n            _context2.next = 17;\n            break;\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(\"Error fetching tasks:\", _context2.t0);\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 14]]);\n    }));\n    return function fetchTasks() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAddTask: handleAddTask,\n      newTaskName: newTaskName,\n      setNewTaskName: setNewTaskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onTaskClick: handleTaskClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, _this);\n};\n_s(App, \"IMqNcwnkSQKiMDcP93RCRo+64yE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskList","TaskForm","jsxDEV","_jsxDEV","App","_s","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","newTaskName","setNewTaskName","fetchTasks","handleTaskClick","taskId","updatedTasks","map","task","id","_objectSpread","status","nextStatus","currentStatus","handleAddTask","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","name","sent","ok","actions","console","error","statusText","t0","stop","apply","arguments","_ref2","_callee2","data","_callee2$","_context2","json","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","onAddTask","onTaskClick","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/DevOpsApp/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [newTaskName, setNewTaskName] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch tasks when the component mounts\n    fetchTasks();\n  }, []); // Run once on component mount\n\n  const handleTaskClick = (taskId) => {\n    // Find the task with the clicked taskId\n    const updatedTasks = tasks.map((task) =>\n      task.id === taskId ? { ...task, status: nextStatus(task.status) } : \ntask\n    );\n\n    setTasks(updatedTasks);\n  };\n\n  const nextStatus = (currentStatus) => {\n    // Define your logic for transitioning task status here\n    switch (currentStatus) {\n      case \"To Do\":\n        return \"In Progress\";\n      case \"In Progress\":\n        return \"Done\";\n      case \"Done\":\n        return \"To Do\";\n      default:\n        return currentStatus;\n    }\n  };\n\n  const handleAddTask = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/tasks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ name: newTaskName }),\n      });\n\n      if (response.ok) {\n        // Task created successfully, update state or perform other \nactions\n        setNewTaskName(\"\"); // Clear input field\n        fetchTasks(); // Refetch tasks to update the list\n      } else {\n        console.error(\"Error creating task:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error creating task:\", error);\n    }\n  };\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/tasks\");\n      if (response.ok) {\n        const data = await response.json();\n        setTasks(data);\n      } else {\n        console.error(\"Error fetching tasks:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Task Management App</h1>\n      <TaskForm\n        onAddTask={handleAddTask}\n        newTaskName={newTaskName}\n        setNewTaskName={setNewTaskName}\n      />\n      <TaskList tasks={tasks} onTaskClick={handleTaskClick} />\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}